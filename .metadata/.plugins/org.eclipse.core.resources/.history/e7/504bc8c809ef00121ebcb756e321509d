package com.example.dozcaldroid;

import java.util.*;
import java.util.Arrays;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;
public class TwoDcolumnComparator {
    public static < T extends Comparable> void sort(final T [][] toSort,final int onColumn) {
        List list = Arrays.asList(toSort);
        Collections.sort(
            list, new Comparator(){
                public int compare(T[] a, T[] b) {
                    return a[onColumn].compareTo(b[onColumn]);
                }
            }
        );
    }
    public static < T extends Comparable> void sort(final T [][] toSort,final int onColumn1, final int onColumn2) {
        List list = Arrays.asList(toSort);
        Collections.sort(
            list, new Comparator(){
                public int compare(T[] a, T[] b) {
                    if (a[onColumn1].compareTo(b[onColumn1]) == 0) {
                        return a[onColumn2].compareTo(b[onColumn2]);
                    } else {
                        return a[onColumn1].compareTo(b[onColumn1]);
                    }
                }
            }
        );
    }
    public static < T extends Comparable> void sort(final T [][] toSort,final int []onColumn) {
        List list = Arrays.asList(toSort);
        Collections.sort(
            list, new Comparator(){
                public int compare(T[] a, T[] b) {
                    for (int i = 0;i < onColumn.length-1;i++){
                        if (a[onColumn[i]].compareTo(b[onColumn[i]]) != 0) {
                            return a[onColumn[i]].compareTo(b[onColumn[i]]);
                        }
                    }
                    return a[onColumn.length].compareTo(b[onColumn.length]);
                }
            }
        );
    }
}


/*public class SortArray {

    public static void main(final String[][] data) {

        Arrays.sort(data, new Comparator<String[]>() {
            @Override
            public int compare(final String[] entry1, final String[] entry2) {
                final String col1 = entry1[0];
                final String col2 = entry2[0];
                return col1.compareTo(col2);
            }
        });

        for (final String[] s : data) {
            System.out.println(s[0] + " " + s[1]);
        }
    }

}*/